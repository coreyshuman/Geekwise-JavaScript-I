<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Calibri Light",sans-serif;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Calibri Light",sans-serif;
	font-style:italic;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Calibri Light",sans-serif;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
code
	{font-family:"Courier New";}
pre
	{mso-style-link:"HTML Preformatted Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-link:"HTML Preformatted";
	font-family:"Courier New";}
span.token
	{mso-style-name:token;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Calibri Light",sans-serif;
	font-weight:bold;}
span.apple-converted-space
	{mso-style-name:apple-converted-space;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Calibri Light",sans-serif;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Calibri Light",sans-serif;
	font-weight:bold;
	font-style:italic;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link="#0563C1" vlink="#954F72">

<div class=WordSection1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt;line-height:107%'>JavaScript I – Day 8</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt;line-height:107%'>Geekwise Academy</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>Instructors:</span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt;line-height:107%'>Corey Shuman</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt;line-height:107%'>Patrick Patterson</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>Slack Channel:</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'><a
href="https://geekwise-js1.slack.com">https://geekwise-js1.slack.com</a></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>Github:</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:20.0pt;line-height:107%'><a
href="https://github.com/coreyshuman/Geekwise-JavaScript-I">https://github.com/coreyshuman/Geekwise-JavaScript-I</a></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>Lesson plans:</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:18.0pt;line-height:107%'><a
href="http://coreyshuman.github.io/Geekwise-JavaScript-I/html/">http://coreyshuman.github.io/Geekwise-JavaScript-I/html/</a></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:24.0pt;line-height:107%'>&nbsp;</span></p>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2F5496'>Today’s Topics</span></h1>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Review Day 7 Assignment</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Programming Challenge</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>More on Functions</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Function Scope</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Function Expressions</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Anonymous Functions</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Hoisting</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>DOM Manipulation</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Selecting and accessing elements on the page</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Element Attributes</p>

<p class=MsoListParagraphCxSpLast><br>
<br>
</p>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2E74B5'> Programming Challenge</span></h1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>Create a new function called&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>dinosaur</span><span style='color:
black'>&nbsp;that has a signature </span><span style='color:#C7254E;background:
#F9F2F4'>dinosaur(type, era, food)</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>Your function should return an array
containing the type, era and eating habits (carnivore or herbivore) passed into
the function.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>Create a second function that contains
a&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>for</span><span
style='color:black'>&nbsp;loop.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>Create an empty&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>array</span><span style='color:black'>&nbsp;for
dinosaurs.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#C7254E;background:#F9F2F4'>Prompt</span><span
style='color:black'>&nbsp;the user for how many dinosaurs they want to input.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>The&nbsp;</span><span style='color:
#C7254E;background:#F9F2F4'>for</span><span style='color:black'>&nbsp;loop
should run the number of times specified by the user.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>In the loop&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>prompt</span><span style='color:black'>&nbsp;the
user for the type of dinosaur, the era in which it lived and it's eating
habits.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>Call the&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>dinosaur()</span><span
style='color:black'>&nbsp;function in each loop with the user supplied info and
push the returned arrays onto your dinosaur array</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:37.5pt;margin-bottom:.0001pt;text-indent:-.25in;line-height:normal;
background:white;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Symbol;color:black'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:black'>After the user has input all of their
dinosaurs, create a second loop to loop over the dinosaur array of arrays and
create a&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>console.log</span><span
style='color:black'>&nbsp;or an&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>alert </span><span style='color:black'>stating the type era
and eating habits of each dinosaur. Instead of </span><span style='color:#C7254E;
background:#F9F2F4'>console.log</span><span style='color:black'>&nbsp;or </span><span
style='color:#C7254E;background:#F9F2F4'>alert</span><span style='color:black'>,
you could also try printing the information to the page using some of the DOM
information we learned on Monday (or peak ahead in the notes for today).</span></p>

<p class=MsoNormal>&nbsp;</p>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2E74B5'>Function Scope</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Every JavaScript program runs with a
&quot;scope&quot;. This can be thought of as the things that are currently
available to the execution of a program. The main / base scope is referred to
as the &quot;global&quot; scope.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Creating a function in JavaScript creates a
new scope.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>One important thing to understand is that
code&nbsp;<b>outside</b>&nbsp;of a function cannot access any code&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>inside</span><span style='color:black'>&nbsp;the
function.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>function</span><span style='font-family:Consolas;
color:#F8F8F2'> foo() {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'> a = </span><span
style='font-family:Consolas;color:#A6E22E'>&quot;inside foo&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'>
a;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>}</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>console.log(a);</span><span style='font-family:Consolas;
color:slategray'> //undefined, because &quot;a&quot; is &quot;scoped&quot; to
the foo function</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>console.log(foo());</span><span style='font-family:
Consolas;color:slategray'> //should log &quot;inside foo&quot; because the
function was called, and a value returned</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So now we know that code <b>outside</b> of
a function can't access anything other than what's returned from a function. However,
the code </span><span style='color:#C7254E;background:#F9F2F4'>inside</span><span
style='color:black'>&nbsp;a function <i>can</i> access anything that is outside
of the function.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
name = </span><span style='font-family:Consolas;color:#A6E22E'>&quot;adam&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>function</span><span style='font-family:Consolas;
color:#F8F8F2'> capitalize() {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'>
name[</span><span style='font-family:Consolas;color:#AE81FF'>0</span><span
style='font-family:Consolas;color:#F8F8F2'>].toUpperCase() + name.slice(</span><span
style='font-family:Consolas;color:#AE81FF'>1</span><span style='font-family:
Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>}</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
capitalizedName = capitalize();</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>console.log(capitalizedName);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Functions do have access to the variables
and other functions that exists in outer scopes (which, when you think about
it, is why you can console.log(...) something inside of a function.</span></p>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2E74B5'>Function Expressions</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So now we know how to write a function, but
there are other ways to do it as well. You'll surely encounter them in the wild
so it's nice to know what's going on when you see them.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Functions in JavaScript are &quot;first
class&quot;. This means they can be passed as arguments to other functions,
returned from other functions, and assigned to variables (instead of being a
named function).</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;background:white;vertical-align:baseline'><span style='color:black'>When
a function is assigned to a variable, it's called a&nbsp;<b>function expression</b>.</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:white'>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline;border:none;padding:0in'><span style='color:black'>Try it: Create a
function expression that assigned a function to a variable.</span></p>

</div>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
capitalize = </span><span style='font-family:Consolas;color:#66D9EF'>function</span><span
style='font-family:Consolas;color:#F8F8F2'> (str) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'>
str[</span><span style='font-family:Consolas;color:#AE81FF'>0</span><span
style='font-family:Consolas;color:#F8F8F2'>].toUpperCase() + str.slice(</span><span
style='font-family:Consolas;color:#AE81FF'>1</span><span style='font-family:
Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>};</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So what is different here? Notice, the
function declaration does not have a name. This is what is known as an </span><span
style='color:#C7254E;background:#F9F2F4'>Anonymous function</span><span
style='color:black'>, or a function with no name.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;background:white;vertical-align:baseline'><span style='color:black'>If
it has no name, how do we call it? Same way we do with other functions, but we
use the variable name instead. In the case of the capitalize function above, we
can call it as&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>capitalize(&quot;adam&quot;)</span><span
style='color:black'>.</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:white'>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline;border:none;padding:0in'><span style='color:black'>Try it: Create and
execute a function expression.</span></p>

</div>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
capitalize = </span><span style='font-family:Consolas;color:#66D9EF'>function</span><span
style='font-family:Consolas;color:#F8F8F2'> (str) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>if</span><span style='font-family:Consolas;color:#F8F8F2'>
(!str) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'> </span><span
style='font-family:Consolas;color:#A6E22E'>&quot;&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    }</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'>
str[</span><span style='font-family:Consolas;color:#AE81FF'>0</span><span
style='font-family:Consolas;color:#F8F8F2'>].toUpperCase() + str.slice(</span><span
style='font-family:Consolas;color:#AE81FF'>1</span><span style='font-family:
Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>};</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>console.log(capitalize(</span><span style='font-family:
Consolas;color:#A6E22E'>&quot;adam&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>));</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>One thing to note about anonymous
functions, they don't actually have to be anonymous. In fact, it's good
practice to name all your functions, for the purposes of error reporting. The
function below will work just the same.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
capitalize = </span><span style='font-family:Consolas;color:#66D9EF'>function</span><span
style='font-family:Consolas;color:#F8F8F2'> capitalize(str) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>if</span><span style='font-family:Consolas;color:#F8F8F2'>
(!str) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'> </span><span
style='font-family:Consolas;color:#A6E22E'>&quot;&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    }</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>return</span><span style='font-family:Consolas;color:#F8F8F2'>
str[</span><span style='font-family:Consolas;color:#AE81FF'>0</span><span
style='font-family:Consolas;color:#F8F8F2'>].toUpperCase() + str.slice(</span><span
style='font-family:Consolas;color:#AE81FF'>1</span><span style='font-family:
Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>};</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>console.log(capitalize(</span><span style='font-family:
Consolas;color:#A6E22E'>&quot;adam&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>));</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Now, let’s try an experiment. Create a new
function (not a function expression) called&nbsp;</span><span style='color:
#C7254E;background:#F9F2F4'>logName</span><span style='color:black'>. Then,
above that code, call&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>logName</span><span
style='color:black'>. What would you expect to happen?</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>logName(</span><span style='font-family:Consolas;
color:#A6E22E'>&quot;adam&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>function</span><span style='font-family:Consolas;
color:#F8F8F2'> logName(name) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    console.log(name);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>}</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>This is due to something JavaScript is
doing called&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>hoisting</span><span
style='color:black'>.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Even though JavaScript executes&nbsp;<b>linearly</b>,
variable and function definitions are actually &quot;hoisted&quot; to the top
of the scope. So even though we call logName before we define it, JavaScript is
actually recognizing the definition of the function, hoisting it to the top of
the scope, which makes it available to call before the definition in the code
actually happens.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;background:white;vertical-align:baseline'><span style='color:black'>Is
the same true of function expressions?</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:white'>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline;border:none;padding:0in'><span style='color:black'>Try it: Call a
function expression before it is defined. What happens?</span></p>

</div>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>foo(</span><span style='font-family:Consolas;
color:#A6E22E'>&quot;adam&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
foo = </span><span style='font-family:Consolas;color:#66D9EF'>function</span><span
style='font-family:Consolas;color:#F8F8F2'> (name) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    console.log(name);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>};</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So what happened there? Why did we get the </span><span
style='color:#C7254E;background:#F9F2F4'>undefined is not a function</span><span
style='color:black'>?</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The reason for this is that&nbsp;<b>only</b>&nbsp;named
function definitions and variable declarations are hoisted. The&nbsp;<b>values</b>&nbsp;of
the variables are not hoisted.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>What would you expect to happen in the
example below?</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
name = </span><span style='font-family:Consolas;color:#A6E22E'>&quot;Adam&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#66D9EF'>function</span><span style='font-family:Consolas;
color:#F8F8F2'> alertName() {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    alert(name);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span><span style='font-family:Consolas;
color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'> name
= </span><span style='font-family:Consolas;color:#A6E22E'>&quot;Becky&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    alert(name);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>}</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>alertName();</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal>&nbsp;</p>

<h1>&nbsp;</h1>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2E74B5'>The DOM</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>What is the DOM?</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The Document Object Model (DOM) is a
programming interface for HTML. It allows JavaScript to manipulate an HTML page
after it's been loaded in the browser.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The DOM provides a representation of the
document as a structured group of nodes and objects that have properties and
methods.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h1><span style='color:#2E74B5'>Accessing Page Elements</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>JavaScript wouldn't be of much use to us if
we couldn't use it to manipulate HTML pages in some way.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>In order to begin manipulating elements on
the page, we need to know how to &quot;reference&quot; those items. For
example, if we want to change our pages &lt;h1&gt; tag, we need to be able to
tell JavaScript which node on the page we want to change.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So, using the example above, lets setup an
HTML page with an h1 tag in it.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;!doctype html&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>html </span><span style='font-family:Consolas;color:#A6E22E'>lang</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>en</span><span style='font-family:
Consolas;color:#F8F8F2'>&quot;&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>head</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>meta </span><span style='font-family:Consolas;color:#A6E22E'>charset</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>UTF-8</span><span style='font-family:
Consolas;color:#F8F8F2'>&quot;&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>title</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;Document&lt;/</span><span
style='font-family:Consolas;color:#F92672'>title</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;/</span><span style='font-family:Consolas;
color:#F92672'>head</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>body</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>h1 </span><span style='font-family:Consolas;color:#A6E22E'>id</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>myHdr</span><span style='font-family:
Consolas;color:#F8F8F2'>&quot;&gt;This is an h1 tag&lt;/</span><span
style='font-family:Consolas;color:#F92672'>h1</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>script </span><span style='font-family:Consolas;color:#A6E22E'>type</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>text/javascript</span><span
style='font-family:Consolas;color:#F8F8F2'>&quot;</span><span style='font-family:
Consolas;color:#F92672'> </span><span style='font-family:Consolas;color:#A6E22E'>src</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>./static/js/day7.js</span><span
style='font-family:Consolas;color:#F8F8F2'>&quot;&gt;&lt;/</span><span
style='font-family:Consolas;color:#F92672'>script</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;/</span><span style='font-family:Consolas;
color:#F92672'>body</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;/</span><span style='font-family:Consolas;
color:#F92672'>html</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The DOM gives us some nice ways to select
elements on a page for manipulating. The first method we'll discuss is called </span><span
style='color:#C7254E;background:#F9F2F4'>document.getElementById()</span><span
style='color:black'>.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Let’s select the h1 tag using the&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>getElementById</span><span
style='color:black'>&nbsp;function. It takes as an&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>argument</span><span style='color:
black'>&nbsp;the id of the element you want to select,&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>myHdr</span><span style='color:black'>&nbsp;in
this case.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>        </span><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
h1 = document.getElementById(</span><span style='font-family:Consolas;
color:#A6E22E'>&quot;myHdr&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        console.log(h1);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Run that page in your browser, you should
see the element logged to your console.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Now type&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>h1.</span><span style='color:black'>&nbsp;(notice
the period). The console should now show you all the various properties and
functions available as part of that object.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<h1><span style='color:#2E74B5'>Element Attributes</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>You can now see that a &quot;node&quot; or
&quot;element&quot; has an underlying JavaScript object that provides all kinds
of methods for you to interact with it. Let’s look at some attributes. First,
modify your&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>h1 </span><span
style='color:black'>tag to include a&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>class=&quot;hdr&quot;</span><span style='color:black'>&nbsp;attribute.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        &lt;</span><span style='font-family:Consolas;
color:#F92672'>h1 </span><span style='font-family:Consolas;color:#A6E22E'>id</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>myHdr</span><span style='font-family:
Consolas;color:#F8F8F2'>&quot;</span><span style='font-family:Consolas;
color:#F92672'> </span><span style='font-family:Consolas;color:#A6E22E'>class</span><span
style='font-family:Consolas;color:#F8F8F2'>=&quot;</span><span
style='font-family:Consolas;color:#E6DB74'>hdr</span><span style='font-family:
Consolas;color:#F8F8F2'>&quot;&gt;This is an h1 tag&lt;/</span><span
style='font-family:Consolas;color:#F92672'>h1</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Now use the&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>h1.hasAttribute()</span><span
style='color:black'>&nbsp;function to see if the given DOM node has a specific
attribute.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>        </span><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
hasClass = h1.hasAttribute(</span><span style='font-family:Consolas;color:#A6E22E'>&quot;class&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>       console.log(</span><span style='font-family:
Consolas;color:#A6E22E'>&quot;The h1 tag has a class attribute: &quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>, hasClass);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Run the code above, it returns&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>boolean</span><span style='color:black'>&nbsp;so
if the attribute exists, it will return&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>true</span><span style='color:black'>&nbsp;otherwise it
will return&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>false</span><span
style='color:black'>.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Cool, so we can see if an element has a
specific attribute, what about adding new attributes? Easily done. Using the
same DOM node we can call the&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>h1.setAttribute()</span><span style='color:black'>. It
takes two arguments in its signature, the property name to set, and its value. Let’s
add a&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>rel </span><span
style='color:black'>attribute.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        h1.setAttribute(</span><span style='font-family:
Consolas;color:#A6E22E'>&quot;rel&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>, </span><span style='font-family:Consolas;color:#A6E22E'>&quot;something&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        console.log(h1);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Awesome, so now we can add and look at
attributes on a DOM node, I guess the only thing left is to be able to remove
them. This is done with the&nbsp;</span><span style='color:#C7254E;background:
#F9F2F4'>removeAttribute</span><span style='color:black'>&nbsp;function.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Let’s remove the </span><span
style='color:#C7254E;background:#F9F2F4'>rel </span><span style='color:black'>attribute
now.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        h1.removeAttribute(</span><span
style='font-family:Consolas;color:#A6E22E'>&quot;rel&quot;</span><span
style='font-family:Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>These functions become really handy so
practice them! You can now manipulate ANY webpage you go to that uses id's on
their elements using your console!</span></p>

<p class=MsoNormal>&nbsp;</p>

<h1><span style='color:#2E74B5'>Other Ways to Select DOM Nodes</span></h1>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Let’s add some markup to our html page.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>        </span><span style='font-family:
Consolas;color:#F8F8F2'>&lt;</span><span style='font-family:Consolas;
color:#F92672'>ul</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>         &lt;</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;&lt;</span><span
style='font-family:Consolas;color:#F92672'>a </span><span style='font-family:
Consolas;color:#A6E22E'>href</span><span style='font-family:Consolas;
color:#F8F8F2'>=&quot;</span><span style='font-family:Consolas;color:#E6DB74'>http://google.com</span><span
style='font-family:Consolas;color:#F8F8F2'>&quot;&gt;google&lt;/</span><span
style='font-family:Consolas;color:#F92672'>a</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;&lt;/</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>         &lt;</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;&lt;</span><span
style='font-family:Consolas;color:#F92672'>a </span><span style='font-family:
Consolas;color:#A6E22E'>href</span><span style='font-family:Consolas;
color:#F8F8F2'>=&quot;</span><span style='font-family:Consolas;color:#E6DB74'>http://yahoo.com</span><span
style='font-family:Consolas;color:#F8F8F2'>&quot;&gt;yahoo&lt;/</span><span
style='font-family:Consolas;color:#F92672'>a</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;&lt;/</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>         &lt;</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;&lt;</span><span
style='font-family:Consolas;color:#F92672'>a </span><span style='font-family:
Consolas;color:#A6E22E'>href</span><span style='font-family:Consolas;
color:#F8F8F2'>=&quot;</span><span style='font-family:Consolas;color:#E6DB74'>http://github.com</span><span
style='font-family:Consolas;color:#F8F8F2'>&quot;&gt;github&lt;/</span><span
style='font-family:Consolas;color:#F92672'>a</span><span style='font-family:
Consolas;color:#F8F8F2'>&gt;&lt;/</span><span style='font-family:Consolas;
color:#F92672'>li</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>       &lt;/</span><span style='font-family:Consolas;
color:#F92672'>ul</span><span style='font-family:Consolas;color:#F8F8F2'>&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>There are alternatives to&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>getElementById</span><span
style='color:black'>&nbsp;for cases where an item might not have an id, or you
want to use an alternative syntax. The first is&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>document.querySelector</span><span
style='color:black'>. </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        </span><span style='font-family:Consolas;
color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'> a =
document.querySelector(</span><span style='font-family:Consolas;color:#A6E22E'>&quot;ul
li a&quot;</span><span style='font-family:Consolas;color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        console.log(a);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>What does that yield? Is it what you would
expect? It should return the first matched element for the specified selector.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Let’s pick the &quot;selector&quot; apart.
We used&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>ul li a</span><span
style='color:black'>. What this is really saying is, &quot;Find any&nbsp;</span><span
style='color:#C7254E;background:#F9F2F4'>a</span><span style='color:black'>&nbsp;tags
that are children of&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>li</span><span
style='color:black'>&nbsp;tags, where the&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>li </span><span style='color:black'>tag is a child of
a&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>ul</span><span
style='color:black'>&nbsp;tag. Put another way, &quot;Find all anchor tags that
are inside an li tag inside a </span><span style='color:#C7254E;background:
#F9F2F4'>ul</span><span style='color:black'>&quot;.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>querySelector</span><span style='color:black'>&nbsp;function
always returns a node or null if no node was matched. If multiple nodes were
selected, only the first will be returned.</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>So what if I want to select more than one
node? That's where </span><span style='color:#C7254E;background:#F9F2F4'>querySelectorAll</span><span
style='color:black'>&nbsp;comes into play.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>        </span><span style='font-family:
Consolas;color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
anchors = document.querySelectorAll(</span><span style='font-family:Consolas;
color:#A6E22E'>&quot;ul li a&quot;</span><span style='font-family:Consolas;
color:#F8F8F2'>);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>       console.log(anchors);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>       console.log(anchors.length);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>The&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>querySelectorAll</span><span style='color:black'>&nbsp;function
returns a&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>NodeList</span><span
style='color:black'>&nbsp;which looks like an array, but actually isn't. It has
a length property, but doesn't have other array methods like push, pop, etc...</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>A&nbsp;</span><span style='color:#C7254E;
background:#F9F2F4'>NodeList</span><span style='color:black'>&nbsp;object
provides an&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>item</span><span
style='color:black'>&nbsp;function that you can use to select a specific item
at a specified index.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        console.log(anchors.item(</span><span
style='font-family:Consolas;color:#AE81FF'>2</span><span style='font-family:
Consolas;color:#F8F8F2'>));</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        console.log(anchors.item(</span><span
style='font-family:Consolas;color:#AE81FF'>10</span><span style='font-family:
Consolas;color:#F8F8F2'>));</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='line-height:normal;background:white;vertical-align:
baseline'><span style='color:black'>Since a&nbsp;</span><span style='color:
#C7254E;background:#F9F2F4'>NodeList</span><span style='color:black'>&nbsp;looks
a lot like an array, and has a length property, that means it can be used as
the basis for a loop, yeah? Let’s loop over each link, and log to the console
the&nbsp;</span><span style='color:#C7254E;background:#F9F2F4'>href</span><span
style='color:black'>&nbsp;property of each node.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;background:
#272822;vertical-align:baseline'><span style='font-size:13.5pt;font-family:
Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        </span><span style='font-family:Consolas;
color:#66D9EF'>for</span><span style='font-family:Consolas;color:#F8F8F2'> (</span><span
style='font-family:Consolas;color:#66D9EF'>var</span><span style='font-family:
Consolas;color:#F8F8F2'> i = </span><span style='font-family:Consolas;
color:#AE81FF'>0</span><span style='font-family:Consolas;color:#F8F8F2'>; i
&lt; anchors.length; i++) {</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>               </span><span style='font-family:Consolas;
color:#66D9EF'>var</span><span style='font-family:Consolas;color:#F8F8F2'>
anchor = anchors.item(i);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>                console.log(anchor.href);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-family:
Consolas;color:#F8F8F2'>        }</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
12.0pt;background:#272822;vertical-align:baseline'><span style='font-size:10.0pt;
font-family:Consolas;color:#F8F8F2'>    </span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<b><span style='font-size:16.0pt;line-height:107%;font-family:"Calibri Light",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1><span style='color:#2E74B5'>Assignment</span></h1>

<p class=MsoNormal>From here on out we will start focusing on the Final Project
in our assignments. A detailed write-up on the project can be found on the
class Github. This also means I won’t be providing weekly solutions to the
assignments since it is an on-going project. Make sure you ask Corey or Patrick
for help if you get stuck and don’t let yourself fall behind!</p>

<p class=MsoNormal>Today we will start by building the physical framework
(HTML) for the ToDo App. Complete the following to keep on track:</p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal>Create a new project for your&nbsp;ToDo App&nbsp;if you
     have not already.</li>
 <li class=MsoNormal>Your HTML should contain:</li>
 <ul style='margin-top:0in' type=circle>
  <li class=MsoNormal>An&nbsp;<span style='color:#C7254E;background:#F9F2F4'>h1</span><span
      style='color:black'>&nbsp;</span>tag with the title of your list.</li>
  <li class=MsoNormal>An <span style='color:#C7254E;background:#F9F2F4'>input</span>
      for entering&nbsp;ToDo Items&nbsp;with a submit button.</li>
  <li class=MsoNormal>An empty&nbsp;<span style='color:#C7254E;background:#F9F2F4'>ul</span><span
      style='color:black'>&nbsp;</span>to hold the&nbsp;ToDo Items.</li>
 </ul>
 <li class=MsoNormal>In your JavaScript:</li>
 <ul style='margin-top:0in' type=circle>
  <li class=MsoNormal>Get the&nbsp;<span style='color:#C7254E;background:#F9F2F4'>input</span>
      and the&nbsp;<span style='color:#C7254E;background:#F9F2F4'>ul</span>
      using DOM access and store them in variables.</li>
  <li class=MsoNormal>When the submit button is&nbsp;clicked&nbsp;get the user
      input and add it to an array.</li>
  <li class=MsoNormal>Create a function that will clear out the&nbsp;<span
      style='color:#C7254E;background:#F9F2F4'>ul</span> and loop over the
      array creating an <span style='color:#C7254E;background:#F9F2F4'>li</span>
      containing each of the&nbsp;ToDo Items.</li>
 </ul>
 <li class=MsoNormal>Use whatever visual framework (or plain&nbsp;CSS&nbsp;styling)
     you like to make your page look good. Treat this like a product that you
     are building for a client. How would they want it to look and function?</li>
</ol>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
